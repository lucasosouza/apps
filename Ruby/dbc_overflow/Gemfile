source 'https://rubygems.org'

gem 'dotenv-rails', :groups => [:development, :test]
# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
gem 'rails', '4.2.0'
# Use postgresql as the database for Active Record
gem 'pg'
# Use SCSS for stylesheets
gem 'sass-rails', '~> 5.0'
# Use Uglifier as compressor for JavaScript assets
gem 'uglifier', '>= 1.3.0'
# Use CoffeeScript for .coffee assets and views
gem 'coffee-rails', '~> 4.1.0'
# See https://github.com/sstephenson/execjs#readme for more supported runtimes
# gem 'therubyracer', platforms: :ruby

# Use jquery as the JavaScript library
gem 'jquery-rails'
# Turbolinks makes following links in your web application faster. Read more: https://github.com/rails/turbolinks
gem 'turbolinks'
# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
gem 'jbuilder', '~> 2.0'
# bundle exec rake doc:rails generates the API under doc/api.
gem 'sdoc', '~> 0.4.0', group: :doc

gem 'rspec-rails'
gem 'capybara'
gem 'shoulda-matchers'
gem 'factory_girl'
gem 'factory_girl_rails'
gem 'faker', github: 'stympy/faker'
gem 'database_cleaner'
gem 'launchy'
gem 'selenium-webdriver'
gem 'responders'

gem 'httparty'

# Use ActiveModel has_secure_password
# gem 'bcrypt', '~> 3.1.7'

# Use Unicorn as the app server
# gem 'unicorn'

# Use Capistrano for deployment
# gem 'capistrano-rails', group: :development

group :development, :test do
  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
  gem 'byebug'

  # Access an IRB console on exception pages or by using <%= console %> in views
  gem 'web-console', '~> 2.0'

  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
  gem 'spring'
end

########## Gem used for testing in the tutorial ##########
# • rspec-rails includes RSpec itself in a wrapper to add some extra Rails-specific features.
# • factory_girl_rails replaces Rails’ default fixtures for feeding test data to the test suite with much more preferable factories.
# • faker generates names, email addresses, and other placeholders for factories.
# • capybara makes it easy to programatically simulate your users’ interactions
# with your web application.


# • database_cleaner helps make sure each spec run in RSpec begins with a clean slate, by–you guessed it–cleaning data from the test database.
# • launchy does one thing, but does it well: It opens your default web browser on demand to show you what your application is rendering. Very useful for
# debugging tests.
# • selenium-webdriver will let us test JavaScript-based browser interactions with
# Capybara.

